// Generated by CoffeeScript 1.8.0
(function() {
  var SALT_FACTOR, bcrypt, mongoose, uniqueValidator, userSchema;

  mongoose = require('mongoose');

  uniqueValidator = require('mongoose-unique-validator');

  bcrypt = require('bcrypt');

  SALT_FACTOR = 10;

  userSchema = new mongoose.Schema({
    username: {
      type: String,
      unique: true,
      index: true,
      required: 'Username is required'
    },
    email: {
      type: String,
      index: true,
      unique: true
    },
    password: {
      type: String,
      required: 'Password is required'
    },
    name: {
      first: {
        type: String,
        required: 'First name is required'
      },
      last: {
        type: String,
        required: 'Last name is required'
      }
    }
  });

  userSchema.plugin(uniqueValidator);

  userSchema.pre('save', function(next) {
    if (!this.isModified('password')) {
      return next();
    }
    return bcrypt.hash(this.password, SALT_FACTOR, (function(_this) {
      return function(err, hash) {
        if (err) {
          return next(err);
        }
        _this.password = hash;
        return next();
      };
    })(this));
  });

  userSchema.methods.comparePassword = function(input, cb) {
    return bcrypt.compare(input, this.password, function(err, isValid) {
      if (err) {
        return cb(err);
      }
      return cb(null, isValid);
    });
  };

  module.exports = mongoose.model('User', userSchema);

}).call(this);
