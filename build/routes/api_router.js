// Generated by CoffeeScript 1.8.0
(function() {
  var BasicStrategy, Router, User, authenticate, params, passport, router, verify;

  Router = require('express').Router;

  router = new Router;

  passport = require('passport');

  BasicStrategy = require('passport-http').BasicStrategy;

  User = require('../models/user');

  params = require('params');

  verify = function(username, password, next) {
    return User.findOne({
      username: username
    }, function(err, user) {
      if (err) {
        return next(err);
      }
      if (user == null) {
        return next(null, false);
      }
      return user.comparePassword(password, function(err, isValid) {
        if (err) {
          return next(err);
        }
        return next(null, isValid);
      });
    });
  };

  passport.use(new BasicStrategy(verify));

  authenticate = passport.authenticate('basic', {
    session: false
  });

  router.post('/register', function(req, res) {
    var user;
    user = new User(req.body);
    return user.save(function(err, user) {
      if (err) {
        return res.status(403).json(err);
      }
      return res.json(user);
    });
  });

  router.post('/authenticate', function(req, res) {
    return User.findOne({
      username: req.body.username
    }, function(err, user) {
      if (err) {
        return res.sendStatus(500);
      }
      if (user == null) {
        return res.sendStatus(401);
      }
      return user.comparePassword(req.body.password, function(err, isValid) {
        if (err) {
          return res.sendStatus(500);
        }
        return res.json(user);
      });
    });
  });

  module.exports = router;

}).call(this);
